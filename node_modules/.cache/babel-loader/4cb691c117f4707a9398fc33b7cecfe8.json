{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRO\\\\Documents\\\\React\\\\react-chartjs-realtime-line-graph\\\\src\\\\components\\\\BarChart.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport moment from \"moment\";\nimport '../styles/barchart.css';\nimport { useSelector } from \"react-redux\";\nvar rabbits = useSelector(function (state) {\n  return state;\n});\n\nvar Chart = require(\"react-chartjs-2\").Chart;\n\nvar chartColors = {\n  red: \"rgb(255, 99, 132)\",\n  orange: \"rgb(255, 159, 64)\",\n  yellow: \"rgb(255, 205, 86)\",\n  green: \"rgb(75, 192, 192)\",\n  blue: \"rgb(54, 162, 235)\",\n  purple: \"rgb(153, 102, 255)\",\n  grey: \"rgb(201, 203, 207)\"\n};\nvar color = Chart.helpers.color;\nvar data = {\n  datasets: [{\n    label: \"Dataset 1 (linear interpolation)\",\n    backgroundColor: color(chartColors.red).alpha(0.5).rgbString(),\n    borderColor: chartColors.red,\n    fill: true,\n    lineTension: 0,\n    borderDash: [8, 4],\n    data: []\n  }]\n};\nvar options = {\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"realtime\",\n      distribution: \"linear\",\n      realtime: {\n        onRefresh: function onRefresh(chart) {\n          chart.data.datasets[0].data.push({\n            x: moment(),\n            y: Math.random()\n          });\n        },\n        delay: 3000,\n        time: {\n          displayFormat: \"h:mm\"\n        }\n      },\n      ticks: {\n        displayFormats: 1,\n        maxRotation: 0,\n        minRotation: 0,\n        stepSize: 1,\n        maxTicksLimit: 30,\n        minUnit: \"second\",\n        source: \"auto\",\n        autoSkip: true,\n        callback: function callback(value) {\n          return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\n        }\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        max: 1\n      }\n    }]\n  }\n};\n\nfunction BarChart() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barchart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BarChart;","map":{"version":3,"names":["React","Line","moment","useSelector","rabbits","state","Chart","require","chartColors","red","orange","yellow","green","blue","purple","grey","color","helpers","data","datasets","label","backgroundColor","alpha","rgbString","borderColor","fill","lineTension","borderDash","options","elements","line","tension","scales","xAxes","type","distribution","realtime","onRefresh","chart","push","x","y","Math","random","delay","time","displayFormat","ticks","displayFormats","maxRotation","minRotation","stepSize","maxTicksLimit","minUnit","source","autoSkip","callback","value","format","yAxes","beginAtZero","max","BarChart"],"sources":["C:/Users/PRO/Documents/React/react-chartjs-realtime-line-graph/src/components/BarChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chartjs-plugin-streaming\";\r\nimport moment from \"moment\";\r\nimport '../styles/barchart.css'\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst rabbits = useSelector(state=> state)\r\n\r\nconst Chart = require(\"react-chartjs-2\").Chart;\r\n\r\nconst chartColors = {\r\n  red: \"rgb(255, 99, 132)\",\r\n  orange: \"rgb(255, 159, 64)\",\r\n  yellow: \"rgb(255, 205, 86)\",\r\n  green: \"rgb(75, 192, 192)\",\r\n  blue: \"rgb(54, 162, 235)\",\r\n  purple: \"rgb(153, 102, 255)\",\r\n  grey: \"rgb(201, 203, 207)\"\r\n};\r\n\r\nconst color = Chart.helpers.color;\r\nconst data = {\r\n  datasets: [\r\n    {\r\n      label: \"Dataset 1 (linear interpolation)\",\r\n      backgroundColor: color(chartColors.red)\r\n        .alpha(0.5)\r\n        .rgbString(),\r\n      borderColor: chartColors.red,\r\n      fill: true,\r\n      lineTension: 0,\r\n      borderDash: [8, 4],\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nconst options = {\r\n  elements: {\r\n    line: {\r\n      tension: 0.5\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"realtime\",\r\n        distribution: \"linear\",\r\n        realtime: {\r\n          onRefresh: function(chart) {\r\n            chart.data.datasets[0].data.push({\r\n              x: moment(),\r\n              y: Math.random()\r\n            });\r\n          },\r\n          delay: 3000,\r\n          time: {\r\n            displayFormat: \"h:mm\"\r\n          }\r\n        },\r\n        ticks: {\r\n          displayFormats: 1,\r\n          maxRotation: 0,\r\n          minRotation: 0,\r\n          stepSize: 1,\r\n          maxTicksLimit: 30,\r\n          minUnit: \"second\",\r\n          source: \"auto\",\r\n          autoSkip: true,\r\n          callback: function(value) {\r\n            return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n          max: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nfunction BarChart() {\r\n  return (\r\n    <div className='barchart'>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,wBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,IAAMC,OAAO,GAAGD,WAAW,CAAC,UAAAE,KAAK;EAAA,OAAGA,KAAH;AAAA,CAAN,CAA3B;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,KAAzC;;AAEA,IAAME,WAAW,GAAG;EAClBC,GAAG,EAAE,mBADa;EAElBC,MAAM,EAAE,mBAFU;EAGlBC,MAAM,EAAE,mBAHU;EAIlBC,KAAK,EAAE,mBAJW;EAKlBC,IAAI,EAAE,mBALY;EAMlBC,MAAM,EAAE,oBANU;EAOlBC,IAAI,EAAE;AAPY,CAApB;AAUA,IAAMC,KAAK,GAAGV,KAAK,CAACW,OAAN,CAAcD,KAA5B;AACA,IAAME,IAAI,GAAG;EACXC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,kCADT;IAEEC,eAAe,EAAEL,KAAK,CAACR,WAAW,CAACC,GAAb,CAAL,CACda,KADc,CACR,GADQ,EAEdC,SAFc,EAFnB;IAKEC,WAAW,EAAEhB,WAAW,CAACC,GAL3B;IAMEgB,IAAI,EAAE,IANR;IAOEC,WAAW,EAAE,CAPf;IAQEC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CARd;IASET,IAAI,EAAE;EATR,CADQ;AADC,CAAb;AAgBA,IAAMU,OAAO,GAAG;EACdC,QAAQ,EAAE;IACRC,IAAI,EAAE;MACJC,OAAO,EAAE;IADL;EADE,CADI;EAMdC,MAAM,EAAE;IACNC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,UADR;MAEEC,YAAY,EAAE,QAFhB;MAGEC,QAAQ,EAAE;QACRC,SAAS,EAAE,mBAASC,KAAT,EAAgB;UACzBA,KAAK,CAACpB,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BqB,IAA5B,CAAiC;YAC/BC,CAAC,EAAEtC,MAAM,EADsB;YAE/BuC,CAAC,EAAEC,IAAI,CAACC,MAAL;UAF4B,CAAjC;QAID,CANO;QAORC,KAAK,EAAE,IAPC;QAQRC,IAAI,EAAE;UACJC,aAAa,EAAE;QADX;MARE,CAHZ;MAeEC,KAAK,EAAE;QACLC,cAAc,EAAE,CADX;QAELC,WAAW,EAAE,CAFR;QAGLC,WAAW,EAAE,CAHR;QAILC,QAAQ,EAAE,CAJL;QAKLC,aAAa,EAAE,EALV;QAMLC,OAAO,EAAE,QANJ;QAOLC,MAAM,EAAE,MAPH;QAQLC,QAAQ,EAAE,IARL;QASLC,QAAQ,EAAE,kBAASC,KAAT,EAAgB;UACxB,OAAOvD,MAAM,CAACuD,KAAD,EAAQ,UAAR,CAAN,CAA0BC,MAA1B,CAAiC,OAAjC,CAAP;QACD;MAXI;IAfT,CADK,CADD;IAgCNC,KAAK,EAAE,CACL;MACEZ,KAAK,EAAE;QACLa,WAAW,EAAE,IADR;QAELC,GAAG,EAAE;MAFA;IADT,CADK;EAhCD;AANM,CAAhB;;AAiDA,SAASC,QAAT,GAAoB;EAClB,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD;IAAM,IAAI,EAAE5C,IAAZ;IAAkB,OAAO,EAAEU,OAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAKD;;AAED,eAAekC,QAAf"},"metadata":{},"sourceType":"module"}