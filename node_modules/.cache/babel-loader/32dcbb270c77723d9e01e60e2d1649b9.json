{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRO\\\\Documents\\\\React\\\\react-chartjs-realtime-line-graph\\\\src\\\\components\\\\BarChart.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport moment from \"moment\";\nimport '../styles/barchart.css';\nimport { useSelector } from \"react-redux\";\n\nfunction BarChart() {\n  var rabbits = useSelector(function (state) {\n    return state.rabbits;\n  });\n\n  var Chart = require(\"react-chartjs-2\").Chart;\n\n  var chartColors = {\n    red: \"rgb(255, 99, 132)\",\n    orange: \"rgb(255, 159, 64)\",\n    yellow: \"rgb(255, 205, 86)\",\n    green: \"rgb(75, 192, 192)\",\n    blue: \"rgb(54, 162, 235)\",\n    purple: \"rgb(153, 102, 255)\",\n    grey: \"rgb(201, 203, 207)\"\n  };\n  var color = Chart.helpers.color;\n  var data = {\n    datasets: [{\n      label: \"Dataset 1 (linear interpolation)\",\n      backgroundColor: color(chartColors.red).alpha(0.5).rgbString(),\n      borderColor: chartColors.red,\n      fill: true,\n      lineTension: 0,\n      borderDash: [8, 4],\n      data: []\n    }]\n  };\n  var options = {\n    elements: {\n      line: {\n        tension: 0.5\n      }\n    },\n    scales: {\n      xAxes: [{\n        type: \"realtime\",\n        distribution: \"linear\",\n        realtime: {\n          onRefresh: function onRefresh(chart) {\n            chart.data.datasets[0].data.push({\n              x: moment(),\n              y: Math.random()\n            });\n          },\n          delay: 3000,\n          time: {\n            displayFormat: \"h:mm\"\n          }\n        },\n        ticks: {\n          displayFormats: 1,\n          maxRotation: 0,\n          minRotation: 0,\n          stepSize: 1,\n          maxTicksLimit: 30,\n          minUnit: \"second\",\n          source: \"auto\",\n          autoSkip: true,\n          callback: function callback(value) {\n            return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\n          }\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          max: 1\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barchart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BarChart;","map":{"version":3,"names":["React","Line","moment","useSelector","BarChart","rabbits","state","Chart","require","chartColors","red","orange","yellow","green","blue","purple","grey","color","helpers","data","datasets","label","backgroundColor","alpha","rgbString","borderColor","fill","lineTension","borderDash","options","elements","line","tension","scales","xAxes","type","distribution","realtime","onRefresh","chart","push","x","y","Math","random","delay","time","displayFormat","ticks","displayFormats","maxRotation","minRotation","stepSize","maxTicksLimit","minUnit","source","autoSkip","callback","value","format","yAxes","beginAtZero","max"],"sources":["C:/Users/PRO/Documents/React/react-chartjs-realtime-line-graph/src/components/BarChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chartjs-plugin-streaming\";\r\nimport moment from \"moment\";\r\nimport '../styles/barchart.css'\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nfunction BarChart() {\r\n\r\n  const rabbits = useSelector(state=> state.rabbits)\r\n\r\nconst Chart = require(\"react-chartjs-2\").Chart;\r\n\r\nconst chartColors = {\r\n  red: \"rgb(255, 99, 132)\",\r\n  orange: \"rgb(255, 159, 64)\",\r\n  yellow: \"rgb(255, 205, 86)\",\r\n  green: \"rgb(75, 192, 192)\",\r\n  blue: \"rgb(54, 162, 235)\",\r\n  purple: \"rgb(153, 102, 255)\",\r\n  grey: \"rgb(201, 203, 207)\"\r\n};\r\n\r\nconst color = Chart.helpers.color;\r\nconst data = {\r\n  datasets: [\r\n    {\r\n      label: \"Dataset 1 (linear interpolation)\",\r\n      backgroundColor: color(chartColors.red)\r\n        .alpha(0.5)\r\n        .rgbString(),\r\n      borderColor: chartColors.red,\r\n      fill: true,\r\n      lineTension: 0,\r\n      borderDash: [8, 4],\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nconst options = {\r\n  elements: {\r\n    line: {\r\n      tension: 0.5\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"realtime\",\r\n        distribution: \"linear\",\r\n        realtime: {\r\n          onRefresh: function(chart) {\r\n            chart.data.datasets[0].data.push({\r\n              x: moment(),\r\n              y: Math.random()\r\n            });\r\n          },\r\n          delay: 3000,\r\n          time: {\r\n            displayFormat: \"h:mm\"\r\n          }\r\n        },\r\n        ticks: {\r\n          displayFormats: 1,\r\n          maxRotation: 0,\r\n          minRotation: 0,\r\n          stepSize: 1,\r\n          maxTicksLimit: 30,\r\n          minUnit: \"second\",\r\n          source: \"auto\",\r\n          autoSkip: true,\r\n          callback: function(value) {\r\n            return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n          max: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className='barchart'>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,wBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,SAASC,QAAT,GAAoB;EAElB,IAAMC,OAAO,GAAGF,WAAW,CAAC,UAAAG,KAAK;IAAA,OAAGA,KAAK,CAACD,OAAT;EAAA,CAAN,CAA3B;;EAEF,IAAME,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,KAAzC;;EAEA,IAAME,WAAW,GAAG;IAClBC,GAAG,EAAE,mBADa;IAElBC,MAAM,EAAE,mBAFU;IAGlBC,MAAM,EAAE,mBAHU;IAIlBC,KAAK,EAAE,mBAJW;IAKlBC,IAAI,EAAE,mBALY;IAMlBC,MAAM,EAAE,oBANU;IAOlBC,IAAI,EAAE;EAPY,CAApB;EAUA,IAAMC,KAAK,GAAGV,KAAK,CAACW,OAAN,CAAcD,KAA5B;EACA,IAAME,IAAI,GAAG;IACXC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kCADT;MAEEC,eAAe,EAAEL,KAAK,CAACR,WAAW,CAACC,GAAb,CAAL,CACda,KADc,CACR,GADQ,EAEdC,SAFc,EAFnB;MAKEC,WAAW,EAAEhB,WAAW,CAACC,GAL3B;MAMEgB,IAAI,EAAE,IANR;MAOEC,WAAW,EAAE,CAPf;MAQEC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CARd;MASET,IAAI,EAAE;IATR,CADQ;EADC,CAAb;EAgBA,IAAMU,OAAO,GAAG;IACdC,QAAQ,EAAE;MACRC,IAAI,EAAE;QACJC,OAAO,EAAE;MADL;IADE,CADI;IAMdC,MAAM,EAAE;MACNC,KAAK,EAAE,CACL;QACEC,IAAI,EAAE,UADR;QAEEC,YAAY,EAAE,QAFhB;QAGEC,QAAQ,EAAE;UACRC,SAAS,EAAE,mBAASC,KAAT,EAAgB;YACzBA,KAAK,CAACpB,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BqB,IAA5B,CAAiC;cAC/BC,CAAC,EAAEvC,MAAM,EADsB;cAE/BwC,CAAC,EAAEC,IAAI,CAACC,MAAL;YAF4B,CAAjC;UAID,CANO;UAORC,KAAK,EAAE,IAPC;UAQRC,IAAI,EAAE;YACJC,aAAa,EAAE;UADX;QARE,CAHZ;QAeEC,KAAK,EAAE;UACLC,cAAc,EAAE,CADX;UAELC,WAAW,EAAE,CAFR;UAGLC,WAAW,EAAE,CAHR;UAILC,QAAQ,EAAE,CAJL;UAKLC,aAAa,EAAE,EALV;UAMLC,OAAO,EAAE,QANJ;UAOLC,MAAM,EAAE,MAPH;UAQLC,QAAQ,EAAE,IARL;UASLC,QAAQ,EAAE,kBAASC,KAAT,EAAgB;YACxB,OAAOxD,MAAM,CAACwD,KAAD,EAAQ,UAAR,CAAN,CAA0BC,MAA1B,CAAiC,OAAjC,CAAP;UACD;QAXI;MAfT,CADK,CADD;MAgCNC,KAAK,EAAE,CACL;QACEZ,KAAK,EAAE;UACLa,WAAW,EAAE,IADR;UAELC,GAAG,EAAE;QAFA;MADT,CADK;IAhCD;EANM,CAAhB;EAkDE,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD;IAAM,IAAI,EAAE3C,IAAZ;IAAkB,OAAO,EAAEU,OAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAKD;;AAED,eAAezB,QAAf"},"metadata":{},"sourceType":"module"}