{"ast":null,"code":"import{useEffect,useRef}from'react';function useInterval(callback,delay){var savedCallback=useRef();// Remember the latest callback.\nuseEffect(function(){savedCallback.current=callback;},[callback]);// Set up the interval.\nuseEffect(function(){function tick(){savedCallback.current();}if(delay!==null){var id=setInterval(tick,delay);return function(){return clearInterval(id);};}},[delay]);}export default useInterval;","map":{"version":3,"names":["useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval"],"sources":["C:/Users/PRO/Documents/React/ecosystem-simulator/src/hooks/useInterval.js"],"sourcesContent":["import {  useEffect, useRef } from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval"],"mappings":"AAAA,OAAUA,SAAV,CAAqBC,MAArB,KAAmC,OAAnC,CAEA,QAASC,YAAT,CAAqBC,QAArB,CAA+BC,KAA/B,CAAsC,CACpC,GAAMC,cAAa,CAAGJ,MAAM,EAA5B,CAEA;AACAD,SAAS,CAAC,UAAM,CACdK,aAAa,CAACC,OAAd,CAAwBH,QAAxB,CACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA;AACAH,SAAS,CAAC,UAAM,CACd,QAASO,KAAT,EAAgB,CACdF,aAAa,CAACC,OAAd,GACD,CACD,GAAIF,KAAK,GAAK,IAAd,CAAoB,CAClB,GAAII,GAAE,CAAGC,WAAW,CAACF,IAAD,CAAOH,KAAP,CAApB,CACA,MAAO,kBAAMM,cAAa,CAACF,EAAD,CAAnB,EAAP,CACD,CACF,CARQ,CAQN,CAACJ,KAAD,CARM,CAAT,CASD,CAED,cAAeF,YAAf"},"metadata":{},"sourceType":"module"}